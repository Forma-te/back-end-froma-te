{
    "openapi": "3.0.0",
    "info": {
        "title": "Forma-te API Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "moises-alberto@hotmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/auth": {
            "post": {
                "tags": [
                    "Authenticated"
                ],
                "summary": "Authenticate user",
                "description": "Authenticates a user based on the provided credentials.",
                "operationId": "auth",
                "requestBody": {
                    "description": "Dados de autenticação",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "Mobile Device"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Autenticação bem-sucedida",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "token_value"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Credenciais inválidas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "As credenciais fornecidas estão incorretas."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "As credenciais fornecidas estão incorretas."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getAuthenticatedUser": {
            "get": {
                "tags": [
                    "Authenticated"
                ],
                "summary": "Get authenticated user data",
                "description": "Returns the data of the currently authenticated user.",
                "operationId": "getAuthenticatedUser",
                "responses": {
                    "200": {
                        "description": "Authenticated user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Moises Bumba"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "moises.bumba@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authenticated"
                ],
                "summary": "User Logout",
                "description": "Revokes all tokens from the authenticated user, effectively logging out.",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/courses-member": {
            "get": {
                "tags": [
                    "Member"
                ],
                "summary": "Get all courses associated with the current member",
                "description": "Fetches a list of all courses associated with the current member.",
                "operationId": "getAllCourseMember",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Vue 3 Laravel"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "VUE 3 Laravel"
                                            },
                                            "image": {
                                                "type": "string",
                                                "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/courses/F987737.jpg"
                                            },
                                            "modules": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Modulo 1"
                                                        },
                                                        "lessons": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Lesson 1"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "CNN PRIME TIME"
                                                                    },
                                                                    "video": {
                                                                        "type": "string",
                                                                        "example": "https://www.youtube.com/watch?v=a1HjPcJbB3c"
                                                                    },
                                                                    "file": {
                                                                        "type": "string",
                                                                        "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/lessonPdf/lesson-1.pdf"
                                                                    },
                                                                    "views": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "user_id": {
                                                                                    "type": "integer",
                                                                                    "example": 2
                                                                                },
                                                                                "lesson_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "qty": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve courses: Database connection error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/course/{id}/member": {
            "get": {
                "tags": [
                    "Member"
                ],
                "summary": "Get course by ID for a specific member",
                "description": "Fetches a specific course by its ID for a particular member.",
                "operationId": "getCourseByIdMember",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Vue 3 Laravel"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "VUE 3 Laravel"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/courses/F987737.jpg"
                                        },
                                        "modules": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Modulo 1"
                                                    },
                                                    "lessons": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Lesson 1"
                                                                },
                                                                "description": {
                                                                    "type": "string",
                                                                    "example": "CNN PRIME TIME"
                                                                },
                                                                "video": {
                                                                    "type": "string",
                                                                    "example": "https://www.youtube.com/watch?v=a1HjPcJbB3c"
                                                                },
                                                                "file": {
                                                                    "type": "string",
                                                                    "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/lessonPdf/lesson-1.pdf"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/supports": {
            "get": {
                "tags": [
                    "Supports Producer"
                ],
                "summary": "Get all supports",
                "description": "Fetches a list of all supports with the given status.",
                "operationId": "getAllSupports",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the supports to filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "P",
                            "enum": [
                                "P",
                                "A",
                                "C"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of supports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "supports": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "lesson_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "producer_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "P"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "The lesson field is required. (and 2 more errors)"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-06-18T14:17:09.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-06-18T14:17:09.000000Z"
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 2
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Siara Bumba"
                                                                    },
                                                                    "url": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "email": {
                                                                        "type": "string",
                                                                        "example": "moises.alberto.king.bumba@gmail.com"
                                                                    },
                                                                    "bibliography": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "phone_number": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "bi": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "image": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "email_verified_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "current_team_id": {
                                                                        "type": "integer",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "profile_photo_path": {
                                                                        "type": "string",
                                                                        "example": null,
                                                                        "nullable": true
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2024-06-15T22:14:15.000000Z"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2024-06-15T22:14:15.000000Z"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "lesson": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "module_id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Lesson 1"
                                                                    },
                                                                    "url": {
                                                                        "type": "string",
                                                                        "example": "05874CE2"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "CNN PRIME TIME"
                                                                    },
                                                                    "file": {
                                                                        "type": "string",
                                                                        "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/lessonPdf/lesson-1.pdf"
                                                                    },
                                                                    "free": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "video": {
                                                                        "type": "string",
                                                                        "example": "https://www.youtube.com/watch?v=a1HjPcJbB3c"
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2024-06-15T22:10:38.000000Z"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2024-06-15T22:10:38.000000Z"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "status_options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "Pendente": {
                                                                "type": "string",
                                                                "example": "Pendente"
                                                            },
                                                            "Aguardado_Aluno": {
                                                                "type": "string",
                                                                "example": "Aguardado Aluno"
                                                            },
                                                            "Finalizado": {
                                                                "type": "string",
                                                                "example": "Finalizado"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the supports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve supports: Database connection error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Support"
                ],
                "summary": "Create a new support request",
                "description": "Creates a new support request and returns the created support details.",
                "operationId": "createSupport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "P",
                                            "A",
                                            "C"
                                        ],
                                        "example": "P"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The lesson field is required. (and 2 more errors)"
                                    },
                                    "lesson_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Support request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "P"
                                        },
                                        "status_label": {
                                            "type": "string",
                                            "example": "Pendente, Aguardar Professor"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "The lesson field is required. (and 2 more errors)"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Siara Bumba"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "moises.alberto.king.bumba@gmail.com"
                                                },
                                                "bibliography": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "bi": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "lesson": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Lesson 2"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "CNN PRIME TIME"
                                                },
                                                "video": {
                                                    "type": "string",
                                                    "example": "https://www.youtube.com/watch?v=a1HjPcJbB3c"
                                                },
                                                "file": {
                                                    "type": "string",
                                                    "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/lessonPdf/lesson-2.pdf"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "dt_updated": {
                                            "type": "string",
                                            "example": "17/06/2024 22:50:36"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/my-supports": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get all supports for the current user",
                "description": "Fetches a list of all supports associated with the current user.",
                "operationId": "mySupports",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of supports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "P"
                                                    },
                                                    "status_label": {
                                                        "type": "string",
                                                        "example": "Pendente, Aguardar Professor"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "The lesson field is required. (and 2 more errors)"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Siara Bumba"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "moises.alberto.king.bumba@gmail.com"
                                                            },
                                                            "bibliography": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "phone_number": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "bi": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lesson": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Lesson 1"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "CNN PRIME TIME"
                                                            },
                                                            "video": {
                                                                "type": "string",
                                                                "example": "https://www.youtube.com/watch?v=a1HjPcJbB3c"
                                                            },
                                                            "file": {
                                                                "type": "string",
                                                                "example": "https://forma-te-ebooks-bucket.s3.amazonaws.com/lessonPdf/lesson-1.pdf"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replies": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "dt_updated": {
                                                        "type": "string",
                                                        "example": "17/06/2024 22:46:51"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the supports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve supports: Database connection error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a paginated list of categories",
                "description": "Returns a paginated list of categories based on the provided query parameters.",
                "operationId": "getAllCategories",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Additional filter for searching categories",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category based on the provided data.",
                "operationId": "storeCategory",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/categories/{categoryId}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "description": "Returns a category based on the provided ID.",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{Id}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Updates a category based on the provided data.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category based on the provided ID.",
                "operationId": "destroyCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted"
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get a paginated list of courses",
                "description": "Returns a paginated list of courses based on the provided query parameters.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Additional filter for searching courses",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Course"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/course/{courseId}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get course by ID",
                "description": "Returns details of a single course based on the provided course ID",
                "operationId": "getCourseById",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "ID of course to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update a course",
                "description": "Update an existing course by ID",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the course to update.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateCourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseStoreResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicate entry for the course URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Duplicate entry for the course URL"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while updating the course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while updating the course"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete a course",
                "description": "Deletes an existing course based on the provided ID.",
                "operationId": "destroyCourse",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "ID of the course to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Course deleted successfully"
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/course": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Create a new course",
                "description": "Creates a new course based on the data provided in the request.",
                "operationId": "createCourse",
                "requestBody": {
                    "description": "Course data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Course Name"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Course Description"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/course.jpg"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "total_hours": {
                                        "type": "integer",
                                        "example": 60
                                    },
                                    "free": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "published": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "category_id": {
                                            "type": "integer"
                                        },
                                        "user_id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "image": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "total_hours": {
                                            "type": "integer"
                                        },
                                        "free": {
                                            "type": "boolean"
                                        },
                                        "published": {
                                            "type": "boolean"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "category_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The category_id field is required."
                                                    }
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ebook-content": {
            "post": {
                "tags": [
                    "Ebook Contents"
                ],
                "summary": "Create a new EbookContent",
                "description": "Creates a new EbookContent using the provided data",
                "operationId": "createEbookContent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateEbookContentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EbookContent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EbookContentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ebook/{ebookId}/ebook-content": {
            "get": {
                "tags": [
                    "Ebook Contents"
                ],
                "summary": "Get modules by EbookContent ID",
                "description": "Returns the EbookContent associated with a given course ID",
                "operationId": "getContentByEbookId",
                "parameters": [
                    {
                        "name": "ebookId",
                        "in": "path",
                        "description": "The ID of the ebook",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Modules retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EbookContentResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ebook-content/{id}": {
            "put": {
                "tags": [
                    "Ebook Contents"
                ],
                "summary": "Update an ebook content",
                "description": "Update an existing ebook content by ID",
                "operationId": "updateEbookContent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ebook content to update.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateEbookContentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ebook content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EbookContentResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicate entry for the ebook content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Duplicate entry for the ebook content"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while updating the ebook content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while updating the ebook content"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ebook Contents"
                ],
                "summary": "Delete a EbookContent",
                "description": "Deletes an existing EbookContent by its ID",
                "operationId": "destroyEbookContent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the EbookContent to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "EbookContent deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ebooks": {
            "get": {
                "tags": [
                    "Ebooks"
                ],
                "summary": "Get a paginated list of ebooks",
                "description": "Returns a paginated list of ebooks based on the provided query parameters.",
                "operationId": "getAllEbook",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Additional filter for searching ebooks",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of ebooks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ebook"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/ebook/{ebookId}": {
            "get": {
                "tags": [
                    "Ebooks"
                ],
                "summary": "Get ebook by ID",
                "description": "Returns details of a single ebook based on the provided ebook ID",
                "operationId": "getEbookById",
                "parameters": [
                    {
                        "name": "ebookId",
                        "in": "path",
                        "description": "ID of ebook to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ebook"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ebook"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ebooks"
                ],
                "summary": "Update a ebook",
                "description": "Updates an existing ebook based on the data provided in the request.",
                "operationId": "updateEbook",
                "parameters": [
                    {
                        "name": "ebookId",
                        "in": "path",
                        "description": "ID of the ebook to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ebook data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "ebook Name"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/ebook.jpg"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ebook updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated ebook Name"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "Updated https://example.com/images/ebook.jpg"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "Updated ABC123"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 99.99
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ebook not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ebooks"
                ],
                "summary": "Delete a ebook",
                "description": "Deletes an existing ebook based on the provided ID.",
                "operationId": "destroyEbook",
                "parameters": [
                    {
                        "name": "ebookId",
                        "in": "path",
                        "description": "ID of the ebook to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ebook deleted successfully"
                    },
                    "404": {
                        "description": "ebook not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ebook": {
            "post": {
                "tags": [
                    "Ebooks"
                ],
                "summary": "Create a new ebook",
                "description": "Creates a new ebook based on the data provided in the request.",
                "operationId": "createEbook",
                "requestBody": {
                    "description": "ebook data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "ebook Name"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/ebook.jpg"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ebook created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "category_id": {
                                            "type": "integer"
                                        },
                                        "user_id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string"
                                        },
                                        "image": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "category_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The category_id field is required."
                                                    }
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The course name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lesson": {
            "post": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Create a new lesson",
                "description": "Creates a new lesson based on the provided request data.",
                "operationId": "createLesson",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateLessonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lesson created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LessonProducerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/module/{moduleId}/lessons": {
            "get": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Get lessons by module ID",
                "description": "Retrieves all lessons associated with a given module ID.",
                "operationId": "getLessonByModuleId",
                "parameters": [
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "ID of the module",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LessonProducerResource"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/lesson/{id}": {
            "put": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Update a lesson",
                "description": "Updates an existing lesson based on the provided request data.",
                "operationId": "updateLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the lesson to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateLessonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LessonProducerResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Lessons"
                ],
                "summary": "Delete a lesson",
                "description": "Deletes an existing lesson based on the provided ID.",
                "operationId": "deleteLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the lesson to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Lesson deleted successfully"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/module": {
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Create a new module",
                "description": "Creates a new module using the provided data",
                "operationId": "createModule",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateModuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleProducerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/course/{courseId}/modules": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Get modules by course ID",
                "description": "Returns the modules associated with a given course ID",
                "operationId": "getModulesByCourse",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "The ID of the course",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Modules retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleProducerResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/module/{id}": {
            "put": {
                "tags": [
                    "Modules"
                ],
                "summary": "Update an existing module",
                "description": "Updates the details of an existing module by its ID",
                "operationId": "updateModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the module to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateModuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleProducerResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Modules"
                ],
                "summary": "Delete a module",
                "description": "Deletes an existing module by its ID",
                "operationId": "destroyModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the module to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Module deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/support/{Id}": {
            "get": {
                "tags": [
                    "Supports Producer"
                ],
                "summary": "Get a support message by ID",
                "description": "Fetches a support message based on the provided ID.",
                "operationId": "getSupportMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the support message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the support message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "P"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "The lesson field is required. (and 2 more errors)"
                                                },
                                                "lesson_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-18T14:17:09.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-18T14:17:09.000000Z"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Siara Bumba"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "moises.alberto.king.bumba@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "lesson": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Lesson 1"
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "example": "05874CE2"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "CNN PRIME TIME"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Support message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Support message not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the support message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve support message: Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/supports/reply": {
            "post": {
                "tags": [
                    "Supports Producer"
                ],
                "summary": "Create a reply to a support message",
                "description": "Creates a new reply to a specified support message.",
                "operationId": "createReply",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "This is a reply to the support message."
                                    },
                                    "support_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reply created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "This is a reply to the support message."
                                                },
                                                "support_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-18T14:17:09.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-18T14:17:09.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create the reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create reply: Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get a paginated list of sales",
                "description": "Returns a paginated list of sales based on the provided query parameters.",
                "operationId": "getAllSales",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Additional filter for searching sales",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of sales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sale"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Sales"
                ],
                "summary": "Create a new sale",
                "description": "Create a new sale record.",
                "operationId": "newSale",
                "requestBody": {
                    "description": "Sale data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateSaleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sale created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Sale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request body is invalid or missing required fields."
                    },
                    "401": {
                        "description": "Unauthorized. Authentication credentials are missing or invalid."
                    },
                    "422": {
                        "description": "Validation error. The request body failed validation rules."
                    },
                    "500": {
                        "description": "Server error. An unexpected error occurred on the server."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/members": {
            "get": {
                "tags": [
                    "My Members"
                ],
                "summary": "Get my students",
                "description": "Returns a paginated list of students related to the authenticated user.",
                "operationId": "getMyMembers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Additional filter for searching students",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of students",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sale"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/member/expired": {
            "get": {
                "tags": [
                    "My Members"
                ],
                "summary": "Get my students with expired status",
                "description": "Returns a paginated list of students with expired status related to the authenticated user.",
                "operationId": "getMyMembersStatusExpired",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Additional filter for searching students",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of students with expired status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sale"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sales/{id}": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sale by ID",
                "description": "Returns the sale details by its ID.",
                "operationId": "getSaleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sale",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sale"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sales"
                ],
                "summary": "Delete a sale",
                "description": "Delete an existing sale record.",
                "operationId": "destroySale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sale to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sale deleted successfully"
                    },
                    "404": {
                        "description": "Not Found. The specified sale was not found."
                    },
                    "500": {
                        "description": "Server error. An unexpected error occurred on the server."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Sales"
                ],
                "summary": "Update a sale",
                "description": "Update an existing sale record.",
                "operationId": "updateSale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sale to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated sale data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateSaleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sale updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Sale"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request body is invalid or missing required fields."
                    },
                    "401": {
                        "description": "Unauthorized. Authentication credentials are missing or invalid."
                    },
                    "404": {
                        "description": "Not Found. The specified sale was not found."
                    },
                    "500": {
                        "description": "Server error. An unexpected error occurred on the server."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "description": "Register a new user and return a token.",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "JWT token for the registered user",
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. The request body is invalid or missing required fields."
                    },
                    "422": {
                        "description": "Validation error. One or more fields failed validation."
                    },
                    "500": {
                        "description": "Server error. An unexpected error occurred on the server."
                    }
                }
            }
        },
        "/api/users/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update the details of an existing user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreUpdateCategoryRequest": {
                "required": [
                    "name",
                    "description",
                    "elegant_font"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the category",
                        "type": "string",
                        "example": "Science"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string",
                        "example": "Courses related to scientific subjects"
                    },
                    "elegant_font": {
                        "description": "Elegant font associated with the category",
                        "type": "string",
                        "example": "Serif"
                    }
                },
                "type": "object"
            },
            "StoreUpdateCourseRequest": {
                "required": [
                    "category_id",
                    "name"
                ],
                "properties": {
                    "category_id": {
                        "description": "The ID of the category",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the course",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 5
                    },
                    "description": {
                        "description": "The description of the course",
                        "type": "string",
                        "nullable": true
                    },
                    "short_name": {
                        "description": "The short name of the course",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "url": {
                        "description": "The URL of the course",
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "description": "The image of the course",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "file": {
                        "description": "The file associated with the course",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "type": {
                        "description": "The type of the course",
                        "type": "string",
                        "nullable": true
                    },
                    "code": {
                        "description": "The unique code of the course",
                        "type": "string",
                        "nullable": true
                    },
                    "total_hours": {
                        "description": "The total hours of the course",
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "description": "The published status of the course",
                        "type": "boolean",
                        "nullable": true
                    },
                    "free": {
                        "description": "The free status of the course",
                        "type": "boolean",
                        "nullable": true
                    },
                    "price": {
                        "description": "The price of the course",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "StoreUpdateEbookContentRequest": {
                "required": [
                    "ebook_id",
                    "name"
                ],
                "properties": {
                    "ebook_id": {
                        "description": "The ID of the ebook",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the EbookContent",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the EbookContent",
                        "type": "string"
                    },
                    "file": {
                        "description": "The file of the EbookContent",
                        "type": "string"
                    },
                    "published": {
                        "description": "The published status of the EbookContent",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "StoreUpdateLessonRequest": {
                "required": [
                    "module_id",
                    "name"
                ],
                "properties": {
                    "module_id": {
                        "description": "The ID of the module",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the lesson",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 5
                    },
                    "file": {
                        "description": "The file associated with the lesson",
                        "type": "string",
                        "format": "binary"
                    },
                    "url": {
                        "description": "The URL of the lesson",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 3
                    },
                    "description": {
                        "description": "The description of the lesson",
                        "type": "string"
                    },
                    "video": {
                        "description": "The video associated with the lesson",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StoreUpdateModuleRequest": {
                "required": [
                    "name",
                    "course_id"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the module",
                        "type": "string"
                    },
                    "course_id": {
                        "description": "The ID of the course",
                        "type": "integer"
                    },
                    "published": {
                        "description": "The published status of the module",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "StoreUpdateSaleRequest": {
                "required": [
                    "course_id",
                    "name",
                    "email_student",
                    "blocked",
                    "status",
                    "date_expired"
                ],
                "properties": {
                    "course_id": {
                        "description": "ID of the course",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID of the user",
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "description": "Name of the sale",
                        "type": "string"
                    },
                    "instrutor_id": {
                        "description": "ID of the instructor",
                        "type": "integer",
                        "nullable": true
                    },
                    "transaction": {
                        "description": "Transaction ID",
                        "type": "string",
                        "nullable": true
                    },
                    "email_student": {
                        "description": "Email of the student",
                        "type": "string",
                        "format": "email"
                    },
                    "payment_mode": {
                        "description": "Payment mode",
                        "type": "string",
                        "nullable": true
                    },
                    "blocked": {
                        "description": "Blocked status",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Status of the sale",
                        "type": "string"
                    },
                    "date_expired": {
                        "description": "Expiration date of the sale",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "StoreUpdateUserRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the user",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "description": "The password of the user",
                        "type": "string",
                        "minLength": 8
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "minLength": 8
                    },
                    "bibliography": {
                        "description": "A brief biography of the user",
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "description": "The phone number of the user in the format 244921271191",
                        "type": "string",
                        "pattern": "^\\d{12}$",
                        "nullable": true
                    },
                    "image": {
                        "description": "Profile image of the user",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "bi": {
                        "description": "User's identification number",
                        "type": "string",
                        "nullable": true
                    },
                    "device_name": {
                        "description": "The name of the device being used",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CourseStoreResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the course",
                        "type": "integer"
                    },
                    "category_id": {
                        "description": "The ID of the category",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "The ID of the user",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the course",
                        "type": "string"
                    },
                    "url": {
                        "description": "The URL of the course",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the course",
                        "type": "string"
                    },
                    "code": {
                        "description": "The code of the course",
                        "type": "string"
                    },
                    "total_hours": {
                        "description": "The total hours of the course",
                        "type": "string"
                    },
                    "published": {
                        "description": "The published status of the course",
                        "type": "boolean"
                    },
                    "free": {
                        "description": "The free status of the course",
                        "type": "boolean"
                    },
                    "price": {
                        "description": "The price of the course",
                        "type": "number",
                        "format": "float"
                    },
                    "available": {
                        "description": "The availability of the course",
                        "type": "boolean"
                    },
                    "image": {
                        "description": "The image of the course",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EbookContentResource": {
                "title": "Ebook Content Resource",
                "description": "Resource representation of Ebook Content",
                "properties": {
                    "id": {
                        "description": "The ID of the ebook content",
                        "type": "integer"
                    },
                    "ebook_id": {
                        "description": "The ID of the associated ebook",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the ebook content",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the ebook content",
                        "type": "string"
                    },
                    "file": {
                        "description": "The file associated with the ebook content",
                        "type": "string"
                    },
                    "free": {
                        "description": "Indicates if the ebook content is free",
                        "type": "boolean"
                    },
                    "published": {
                        "description": "Indicates if the ebook content is published",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "LessonProducerResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the lesson",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the lesson",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the lesson",
                        "type": "string"
                    },
                    "video": {
                        "description": "The video associated with the lesson",
                        "type": "string"
                    },
                    "file": {
                        "description": "The file associated with the lesson",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ModuleProducerResource": {
                "properties": {
                    "id": {
                        "description": "The ID of the module",
                        "type": "integer"
                    },
                    "course_id": {
                        "description": "The ID of the course",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the module",
                        "type": "string"
                    },
                    "published": {
                        "description": "The published status of the module",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "description": "ID of the category",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the category",
                        "type": "string",
                        "example": "Science"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string",
                        "example": "Courses related to scientific subjects"
                    },
                    "elegant_font": {
                        "description": "Elegant font associated with the category",
                        "type": "string",
                        "example": "Serif"
                    }
                },
                "type": "object"
            },
            "Course": {
                "title": "Course model",
                "description": "Course model",
                "required": [
                    "category_id",
                    "name"
                ],
                "properties": {
                    "category_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "total_hours": {
                        "type": "integer"
                    },
                    "free": {
                        "type": "boolean"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Course"
                }
            },
            "Ebook": {
                "title": "Ebook model",
                "description": "Ebook model",
                "required": [
                    "category_id",
                    "user_id",
                    "name"
                ],
                "properties": {
                    "category_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Ebook"
                }
            },
            "EbookContent": {
                "title": "EbookContent model",
                "description": "EbookContent model",
                "required": [
                    "ebook_id",
                    "name"
                ],
                "properties": {
                    "ebook_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "free": {
                        "type": "boolean"
                    },
                    "published": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "EbookContent"
                }
            },
            "Lesson": {
                "title": "Lesson model",
                "description": "Lesson model",
                "required": [
                    "module_id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "The ID of the lesson",
                        "type": "integer",
                        "example": 1
                    },
                    "module_id": {
                        "description": "The ID of the module",
                        "type": "integer",
                        "example": 10
                    },
                    "name": {
                        "description": "The name of the lesson",
                        "type": "string",
                        "example": "Introduction to Biology"
                    },
                    "file": {
                        "description": "The file associated with the lesson",
                        "type": "string",
                        "example": "path/to/file.pdf"
                    },
                    "url": {
                        "description": "The URL of the lesson",
                        "type": "string",
                        "example": "http://example.com/lesson"
                    },
                    "description": {
                        "description": "The description of the lesson",
                        "type": "string",
                        "example": "0F380364"
                    },
                    "free": {
                        "description": "Indicates if the lesson is free",
                        "type": "boolean",
                        "example": true
                    },
                    "video": {
                        "description": "The video associated with the lesson",
                        "type": "string",
                        "example": "http://example.com/video.mp4"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Course"
                }
            },
            "Module": {
                "title": "Module model",
                "description": "Module model",
                "required": [
                    "course_id",
                    "name"
                ],
                "properties": {
                    "course_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Module"
                }
            },
            "Sale": {
                "title": "Sale",
                "description": "Model representing a sale.",
                "properties": {
                    "course_id": {
                        "description": "ID of the course related to the sale",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID of the user who made the purchase",
                        "type": "integer"
                    },
                    "instrutor_id": {
                        "description": "ID of the instructor related to the course",
                        "type": "integer"
                    },
                    "email_student": {
                        "description": "Email of the student who made the purchase",
                        "type": "string"
                    },
                    "payment_mode": {
                        "description": "Payment mode used for the purchase",
                        "type": "string"
                    },
                    "transaction": {
                        "description": "Transaction ID related to the purchase",
                        "type": "string"
                    },
                    "blocked": {
                        "description": "Indicates if the sale is blocked or not",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Status of the sale. Possible values: S (Iniciado, Aguardar Validação), A (Aprovado), E (Expirado), P (Pendente)",
                        "type": "string",
                        "enum": [
                            "S",
                            "A",
                            "E",
                            "P"
                        ],
                        "example": "S"
                    },
                    "date_created": {
                        "description": "Date and time when the sale was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "date_expired": {
                        "description": "Date and time when the sale expires",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Support": {
                "title": "Support",
                "description": "Support model",
                "properties": {
                    "id": {
                        "description": "ID of the support request",
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "Status of the support request",
                        "type": "string",
                        "enum": [
                            "P",
                            "A",
                            "C"
                        ],
                        "example": "P"
                    },
                    "status_label": {
                        "description": "Human-readable status label",
                        "type": "string",
                        "example": "Pendente, Aguardar Professor"
                    },
                    "description": {
                        "description": "Description of the support request",
                        "type": "string",
                        "example": "The lesson field is required. (and 2 more errors)"
                    },
                    "lesson_id": {
                        "description": "ID of the associated lesson",
                        "type": "integer",
                        "example": 2
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "lesson": {
                        "$ref": "#/components/schemas/Lesson"
                    },
                    "dt_updated": {
                        "description": "Date and time when the support request was last updated",
                        "type": "string",
                        "example": "17/06/2024 22:50:36"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User model",
                "description": "User model",
                "properties": {
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string",
                        "format": "int64",
                        "maximum": 255
                    },
                    "phone": {
                        "title": "Phone",
                        "type": "string",
                        "format": "msisdn"
                    },
                    "url": {
                        "title": "url",
                        "type": "string",
                        "format": "int64",
                        "maximum": 255
                    },
                    "image": {
                        "title": "image",
                        "type": "string",
                        "format": "int64",
                        "maximum": 255
                    },
                    "bibliography": {
                        "title": "Bibliografia",
                        "type": "string",
                        "format": "int64",
                        "maximum": 255
                    },
                    "addresses": {
                        "title": "addresses",
                        "type": "string",
                        "format": "int64",
                        "maximum": 255
                    },
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "format": "int64",
                        "maximum": 255
                    }
                },
                "type": "object"
            }
        }
    }
}